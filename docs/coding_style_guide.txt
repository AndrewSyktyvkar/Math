# Основные правила написания кода

## Отступы
Отступы при форматировании кода задаются с помощью табуляции (не пробелов!!!).
Ширина табуляции должна быть равна 8 символам. Смысл использования отсупов 
состоит в том, что они помогают чётко определять начало и конец блока. 
Некоторые людижалуются, что 8-символьная табуляция делает код нечитаемым на 
80-символьном терминале. На самом деле, если вам нужно больше трёх уровней 
отступов, то следует пересмотреть программу.

## Разбиение длинных строк и строковых литералов на части
Ограничение на длину строки 80 (исключая код разметки HTMl, для него 120 
символов) символов. Выражения большей длины следует разбивать на части.

```php
function fun(int a, int b, int c) {
    if (condition)
        echo "Warning this is a long printk with " .
        	"3 parameters a: %u b: %u " .
                "c: %u \n", a, b, c);
    else
        next_statement;
}
```

##Расстановка скобок
Фигурные скобки во всех случаях ставятся следующим образом:
```php
function fun() {
	stuff;
}

if (expression) {
	statement;
}

for ($i = ; statement; $++) {
	stuff
}
```

## Пробелы
Используйте пробелы после ключевых слов: if, switch, case, for, do, while, но
не sizeof.

```php
if (sizeof($arr) > 0)
	statement;
```

Не используйте пробелы около выражений в скобках:
```php
$s = sizeof( $arr )
```
Используйте один пробел с каждой стороны для бинарных операторов, таких как:
```
= + - < > * / % | & ^ <= >= == != ? :
```

Не используйте пробелы после унахрных операторов:
```
& * + - ~ ! sizeof
```

Не используйте пробелы после(до) префиксного(постфиксного) 
инкремента и декремента:
```
++ --
```

Не используйте пробелы около операторов:
```
->
```

## Имена
Имена пишутся через нижнее подчёркивание: variable_name, function_name, 
class_name... Имена должны быть короткиими и понятными при дальнейшем 
использовании. Переменную ThisVariableIsATemporaryCounter следует назвать tmp
а функция, считающая активных пользователей должна называться 
count_active_users(), а не cntusr().
